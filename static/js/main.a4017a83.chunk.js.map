{"version":3,"sources":["components/Section/Section.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/Section/Section.js","redux/app/app-types.js","redux/app/app-actions.js","redux/app/app-selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/app/app-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss"],"names":["module","exports","Section","children","className","s","section","types","ADD","DELETE","CHANGE_FILTER","phonebookActions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getFilter","state","contacts","filter","getVisibleContacts","getContacts","normalizedFilter","toLowerCase","includes","Form","onSubmit","useState","setName","setNumber","dispatch","useDispatch","handleChange","event","target","value","getVcontacts","useSelector","formContact","e","preventDefault","map","obj","alert","actions","contactFormItem","type","onChange","pattern","title","required","formButton","ContactItem","contactItem","contactItemText","onClick","ContactList","contactList","Filter","filterBox","currentTarget","Phonebook","box","createReducer","contactsObj","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","appReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,IAAM,mB,qZCAT,SAASC,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAChC,OAAO,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,I,2DCGtBI,EALD,CACZC,IAAK,uBACLC,OAAQ,0BACRC,cAAe,0BCcFC,EADU,CAAEC,WAZRC,YAAaN,EAAMC,KAAK,gBAAGM,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CAChEC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAQmCK,cAJjBP,YAAaN,EAAME,QAIaY,aAFjCR,YAAaN,EAAMG,gBCb3BY,EAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,QAEtCC,EAAqB,SAACH,GACjC,IAAMC,EAJmB,SAACD,GAAD,OAAWA,EAAMC,SAASA,SAIlCG,CAAYJ,GAEvBK,EADSN,EAAUC,GACOM,cAEhC,OAAOL,EAASC,QAAO,qBAAGX,KACnBe,cAAcC,SAASF,OCHjB,SAASG,EAAT,GAA4B,EAAZC,SAAa,IAC1C,EAAwBC,mBAAS,IAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOlB,EAAP,KAAeoB,EAAf,KAEMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtB1B,EAAR,EAAQA,KAAM2B,EAAd,EAAcA,MAEd,OAAQ3B,GACN,IAAK,OACHoB,EAAQO,GACR,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAGAC,EAAeC,YAAYjB,GAcjC,OACE,uBAAMtB,UAAWC,IAAEuC,YAAaZ,SAdb,SAACa,GACpBA,EAAEC,iBAEgBJ,EAAaK,KAAI,SAACC,GAAD,OAASA,EAAIlC,QAClCgB,SAAShB,GACrBmC,MAAM,GAAD,OAAInC,EAAJ,4BAELsB,EAASc,EAAQtC,WAAW,CAAEE,OAAMC,YAEtCmB,EAAQ,IACRC,EAAU,KAIV,UACE,wBAAO/B,UAAWC,IAAE8C,gBAApB,iBAEE,uBACEC,KAAK,OACLtC,KAAK,OACL2B,MAAO3B,EACPuC,SAAUf,EACVgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,uBACA,wBAAOpD,UAAWC,IAAE8C,gBAApB,mBAEE,uBACEC,KAAK,MACLtC,KAAK,SACL2B,MAAO1B,EACPsC,SAAUf,EACVgB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQpD,UAAWC,IAAEoD,WAAYL,KAAK,SAAtC,4B,qCCjES,SAASM,EAAT,GAA4C,IAArBzC,EAAoB,EAApBA,GAAIH,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACxCqB,EAAWC,cAEjB,OACE,sBAAKjC,UAAWC,IAAEsD,YAAlB,UACE,mBAAGvD,UAAWC,IAAEuD,gBAAhB,SAAkC9C,IAClC,mBAAGV,UAAWC,IAAEuD,gBAAhB,SAAkC7C,IAClC,wBACEqC,KAAK,SACLhD,UAAWC,IAAEuD,gBACbC,QAAS,kBAAMzB,EAASc,EAAQ9B,cAAcH,KAHhD,uBCPS,SAAS6C,IACtB,IAAMtC,EAAWmB,YAAYjB,GAE7B,OACE,oBAAItB,UAAWC,IAAE0D,YAAjB,SACGvC,EAASuB,KAAI,gBAAG9B,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,6BACE,cAAC2C,EAAD,CAAazC,GAAIA,EAAIH,KAAMA,EAAMC,OAAQA,KADlCE,Q,qBCUF+C,EAfA,WACb,IAAM5B,EAAWC,cACXI,EAAQE,YAAYrB,GAC1B,OACE,wBAAOlB,UAAWC,IAAE4D,UAApB,kCAEE,uBACEb,KAAK,OACLX,MAAOA,EACPY,SAAU,SAACR,GAAD,OAAOT,EAASc,EAAQ7B,aAAawB,EAAEqB,cAAczB,e,iBCLxD,SAAS0B,IACtB,OACE,cAACjE,EAAD,UACE,sBAAKE,UAAWC,IAAE+D,IAAlB,UACE,2CACA,cAAC,EAAD,IAEA,0CACA,cAAC,EAAD,IACA,cAACN,EAAD,S,4FCdFtC,EAAW6C,YAAcC,GAAD,mBAC3BpB,EAAQtC,YAAa,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OAD7B,cAE3BkC,EAAQ9B,eAAgB,SAACG,EAAD,OAAUP,EAAV,EAAUA,QAAV,OACvBO,EAAME,QAAO,qBAAGR,KAAgBD,QAHN,IAMxBS,EAAS4C,YAAc,GAAD,eACzBnB,EAAQ7B,cAAe,SAACkD,EAAD,YAAMvD,YAGjBwD,cAAgB,CAC7BhD,WACAC,WCFIgD,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPlE,SAAUmE,YAAeP,EAAuBQ,IAElDnB,aACAoB,UAAUC,IAGCC,EAAYC,YAAaR,GC7BtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBChB1BtG,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,WAAa,kC,kBCArID,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,wC","file":"static/js/main.a4017a83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2gsQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__4Gfgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__1OnHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__znguq\"};","import s from \"../Section/Section.module.scss\";\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n","const types = {\n  ADD: \"phonebook/addContact\",\n  DELETE: \"phonebook/deleteContact\",\n  CHANGE_FILTER: \"phonebook/changeFilter\",\n};\nexport default types;\n","import shortid from \"shortid\";\nimport { createAction } from \"@reduxjs/toolkit\";\nimport types from \"./app-types\";\n\nconst addContact = createAction(types.ADD, ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(types.DELETE);\n\nconst changeFilter = createAction(types.CHANGE_FILTER);\n\nconst phonebookActions = { addContact, deleteContact, changeFilter };\nexport default phonebookActions;\n\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     },\n\n// });\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\n// export default { addContact, deleteContact, changeFilter };\n","export const getContacts = (state) => state.contacts.contacts;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport actions from \"../../redux/app/app-actions\";\nimport { getVisibleContacts } from \"../../redux/app/app-selectors\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const getVcontacts = useSelector(getVisibleContacts);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const existName = getVcontacts.map((obj) => obj.name);\n    if (existName.includes(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(actions.addContact({ name, number }));\n    }\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.formContact} onSubmit={handleSubmit}>\n      <label className={s.contactFormItem}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <br />\n      <label className={s.contactFormItem}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import s from \"./ContactItem.module.scss\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport actions from \"../../redux/app/app-actions\";\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactItemText}>{name}</p>\n      <p className={s.contactItemText}>{number}</p>\n      <button\n        type=\"button\"\n        className={s.contactItemText}\n        onClick={() => dispatch(actions.deleteContact(id))}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import s from \"./ContactList.module.scss\";\nimport ContactItem from \"../ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport { getVisibleContacts } from \"../../redux/app/app-selectors\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <ContactItem id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from \"react\";\nimport s from \"./Filter.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport actions from \"../../redux/app/app-actions\";\nimport { getFilter } from \"../../redux/app/app-selectors\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  return (\n    <label className={s.filterBox}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => dispatch(actions.changeFilter(e.currentTarget.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// import { useState, useEffect } from \"react\";\n// import shortid from \"shortid\";\n// import contactsObj from \"./contacts.json\";\n\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport s from \"./App.module.scss\";\n\nexport default function Phonebook() {\n  return (\n    <Section>\n      <div className={s.box}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Section>\n  );\n}\n\n// const [contacts, setContacts] = useState(contactsObj);\n// const [filter, setFilter] = useState(\"\");\n\n// useEffect(() => {\n//   const contacts = window.localStorage.getItem(\"contacts\");\n//   const parsedContacts = JSON.parse(contacts);\n//   if (parsedContacts) {\n//     setContacts(parsedContacts);\n//   }\n// }, []);\n\n// useEffect(() => {\n//   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n// }, [contacts]);\n\n// const addContact = ({ name, number }) => {\n//   const contact = {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   };\n//   const nameArr = getVisibleContacts();\n//   const existName = nameArr.map((obj) => obj.name);\n//   if (existName.includes(name)) {\n//     alert(`${name} is already in contacts`);\n//   } else {\n//     setContacts([...contacts, contact]);\n//   }\n// };\n\n// const getVisibleContacts = () => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\n// const deleteContact = (contactId) => {\n//   setContacts(contacts.filter((contact) => contact.id !== contactId));\n// };\n\n// const changeFilter = (e) => {\n//   setFilter(e.currentTarget.value);\n// };\n\n//   return (\n//     <Section>\n//       <div className={s.box}>\n//         <h1>Phonebook</h1>\n//         <ContactForm onSubmit={addContact} />\n\n//         <h2>Contacts</h2>\n//         <Filter value={filter} onChange={changeFilter} />\n//         <ContactList\n//           contacts={getVisibleContacts()}\n//           onDeleteContact={deleteContact}\n//         />\n//       </div>\n//     </Section>\n//   );\n// }\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./app-actions\";\nimport contactsObj from \"../../contacts.json\";\n\nconst contacts = createReducer(contactsObj, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n\n// import { combineReducers } from 'redux';\n// import types from './app-selectors';\n// import contactsObj from \"./contacts.json\";\n\n// const contacts = (state = contactsObj, { type, payload }) => {\n//   switch (type) {\n//       case types.ADD:\n\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts,\n//   filter,\n// });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport appReducer from \"./app/app-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, appReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n\n// import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import counterReducer from './counter/counter-reducer';\n// import appReducer from './app/app-reducer';\n\n// const rootReducer = combineReducers({\n//   counter: counterReducer,\n//   Phonebook: appReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__HBssj\",\"contactFormItem\":\"ContactForm_contactFormItem__JeaLu\",\"formButton\":\"ContactForm_formButton__2AC-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__30cC-\",\"contactItemText\":\"ContactItem_contactItemText__2GH68\"};"],"sourceRoot":""}